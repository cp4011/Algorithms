"""题目描述
有一种将字母编码成数字的方式：'a'->1, 'b->2', ... , 'z->26'。现在给一串数字，给出有多少种可能的译码结果。
输入描述:
编码后数字串
输出描述:
可能的译码结果数
示例1
输入
12
输出
2
说明
2种可能的译码结果（”ab” 或”l”）
示例2
输入
31717126241541717
输出
192
说明
192种可能的译码结果
"""

'''状态转移方程是 dp[n] = dp[n - 1] + dp[n - 2], 注意一下0和超过26的约束'''


s = input()
dp = [0]*len(s)
if s[0] != '0':
    dp[0] = 1
for i in range(1, len(s)):
    if s[i] == '0':
        if s[i-1] == '1' or s[i-1] == '2':
            dp[i] = dp[i-2] if i >= 2 else 1
    elif s[i] <= '6':
        dp[i] = dp[i-1]
        if s[i-1] == '1' or s[i-1] == '2':
            dp[i] += (dp[i-2] if i >= 2 else 1)
    else:
        dp[i] = dp[i-1]
        if s[i-1] == '1':
            dp[i] += (dp[i-2] if i >= 2 else 1)
print(dp[-1])



