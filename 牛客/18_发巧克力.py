"""老师购买了与学生数量相同的巧克力，每位同学按照学号顺序依次独自进入他的办公室，他会随机给一定数量的巧克力给进入他办公室
的学生（最少1块，学号靠后的同学可能拿不到巧克力）
小招的学号是1，他第一个进入办公室。他希望从老师那里拿到至少6块巧克力。你帮他算一下他拿到至少6块巧克力的方案数一共是多少
（如果最终方案中，某个学号的同学拿到的巧克力数不一样则认为是不同的方案）
最终的结果可能很大，输出对666666666取模后的结果
输入描述：
一个整数n，代表学生的人数
输出描述：
一个整数按时，代表总方案数对666666666取模后的结果
输入  6
输出  1

输入  8
输出  4
说明：可能的方案有
8
7 1
6 2
6 1 1
一共4种
备注：对于100%的数据，1<=n<=100000
"""
'''n = 5    6   7   8   9   10
       0    1   2   4   8   16 种  可得出规律 2 ^ (n-6)
'''

import sys

n = int(sys.stdin.readline().strip())
if n < 6:
    print(0)
else:
    print((2 ** (n - 6)) % 666666666)      # 先把6个给小招，现在问题就成为了把a个巧克力分给 b 个人（1 <= a <= b)共有 2^(a-1) 种分法


'''下面是自己的，，通过40%，超时'''


def A(m, n):                               # 排列A(m,n)
    res = 1
    for i in range(m-n+1, m+1):
        res *= i
    return res


ans = 0
n = int(input())
if n < 6:
    ans = 0
elif n == 6:
    ans = 1
else:
    for i in range(6, n+1):         # 小招得到i个巧克力，[6,n]
        ans_1 = 0
        for j in range(0, n-i):     # 学号为1的小招拿到了i个，则剩余共n-i个巧克力，分给后面的人，n-i后的同学铁定没有巧克力了
            ans_1 += A(n-i, j)      # 这剩余的n-i个巧克力分给前j个学生
        ans += ans_1

print(ans)

